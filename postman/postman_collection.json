{
	"info": {
		"_postman_id": "8f2cf427-2a8e-4482-bb42-9f4e29e57332",
		"name": "everkeep-api",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "users",
			"item": [
				{
					"name": "register",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"postman.setEnvironmentVariable(\"interaction-id\", response.interactionId);",
									"pm.test(\"Status code is 201'\", function () {",
									"    pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"{{user-email}}\",\n    \"password\": \"{{user-password}}\",\n    \"matchingPassword\": \"{{user-password}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{host}}:{{port}}/api/users",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "resend confirmation email",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://{{host}}:{{port}}/api/users/confirmation?email={{user-email}}",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"users",
								"confirmation"
							],
							"query": [
								{
									"key": "email",
									"value": "{{user-email}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "confirm registration",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "http://{{host}}:{{port}}/api/users/confirmation?token=74a7b357-144a-4d29-adf5-f1b9cfddb969",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"users",
								"confirmation"
							],
							"query": [
								{
									"key": "token",
									"value": "74a7b357-144a-4d29-adf5-f1b9cfddb969"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "reset password",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {",
									"    pm.response.to.have.status(204);",
									"});",
									"",
									"pm.environment.unset(\"user-password\")"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://{{host}}:{{port}}/api/users/password?email={{user-email}}",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"users",
								"password"
							],
							"query": [
								{
									"key": "email",
									"value": "{{user-email}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "update password",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseJson = pm.response.json();",
									"",
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.environment.set(\"user-password\", responseJson.password)"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"{{user-email}}\",\n    \"password\": \"{{user-password}}\",\n    \"matchingPassword\": \"{{user-password}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{host}}:{{port}}/api/users/password?email={{user-email}}&token=d8c3e871-b99e-4b6d-8f3c-370713ab7c31",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"users",
								"password"
							],
							"query": [
								{
									"key": "email",
									"value": "{{user-email}}"
								},
								{
									"key": "token",
									"value": "d8c3e871-b99e-4b6d-8f3c-370713ab7c31"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "sessions",
			"item": [
				{
					"name": "create",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseJson = pm.response.json();",
									"",
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"pm.test(\"Response body has expected values\", () => {",
									"  const responseJson = pm.response.json();",
									"  pm.expect(responseJson).to.haveOwnProperty(\"authToken\");",
									"  pm.expect(responseJson).to.haveOwnProperty(\"refreshToken\");",
									"  pm.expect(responseJson.email).to.eql(pm.environment.get(\"user-email\"));",
									"});",
									"",
									"pm.environment.set(\"auth-token\", responseJson.authToken);",
									"pm.environment.set(\"refresh-token\", responseJson.refreshToken);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"{{user-email}}\",\n    \"password\": \"{{user-password}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{host}}:{{port}}/api/sessions",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"sessions"
							]
						}
					},
					"response": []
				},
				{
					"name": "update",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseJson = pm.response.json();",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Response body has expected values\", () => {",
									"  const responseJson = pm.response.json();",
									"  pm.expect(responseJson).to.haveOwnProperty(\"authToken\");",
									"  pm.expect(responseJson).to.haveOwnProperty(\"refreshToken\");",
									"  pm.expect(responseJson.email).to.eql(pm.environment.get(\"user-email\"));",
									"});",
									"",
									"pm.environment.set(\"auth-token\", responseJson.authToken);",
									"pm.environment.set(\"refresh-token\", responseJson.refreshToken);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Refresh-Token",
								"value": "{{refresh-token}}",
								"type": "default"
							}
						],
						"url": {
							"raw": "http://{{host}}:{{port}}/api/sessions",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"sessions"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {",
									"    pm.response.to.have.status(204);",
									"});",
									"",
									"pm.environment.set(\"auth-token\", '')",
									"pm.environment.set(\"refresh-token\", '')"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Refresh-Token",
								"value": "{{refresh-token}}",
								"type": "default"
							}
						],
						"url": {
							"raw": "http://{{host}}:{{port}}/api/sessions",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"sessions"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "notes",
			"item": [
				{
					"name": "create",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseJson = pm.response.json();",
									"",
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"pm.test(\"Response body has expected values\", () => {",
									"  const responseJson = pm.response.json();",
									"  pm.expect(responseJson).to.haveOwnProperty(\"id\");",
									"  pm.expect(responseJson).to.haveOwnProperty(\"title\");",
									"  pm.expect(responseJson).to.haveOwnProperty(\"text\");",
									"  pm.expect(responseJson).to.haveOwnProperty(\"priority\");",
									"});",
									"",
									"pm.environment.set(\"note-id\", responseJson.id);",
									"pm.environment.set(\"note-title\", responseJson.title);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"The Shawshank Redemption\",\n    \"text\": \"Two imprisoned men bond over a number of years, finding solace and eventual redemption through acts of common decency.\",\n    \"priority\": \"HIGH\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{host}}:{{port}}/api/notes",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"notes"
							]
						}
					},
					"response": []
				},
				{
					"name": "get all",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://{{host}}:{{port}}/api/notes",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"notes"
							]
						}
					},
					"response": []
				},
				{
					"name": "get by id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://{{host}}:{{port}}/api/notes/{{note-id}}",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"notes",
								"{{note-id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "get by title",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://{{host}}:{{port}}/api/notes/search?title={{note-title}}",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"notes",
								"search"
							],
							"query": [
								{
									"key": "title",
									"value": "{{note-title}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "update",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseJson = pm.response.json();",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Response body has expected values\", () => {",
									"  const responseJson = pm.response.json();",
									"  pm.expect(responseJson).to.haveOwnProperty(\"id\");",
									"  pm.expect(responseJson).to.haveOwnProperty(\"title\");",
									"  pm.expect(responseJson).to.haveOwnProperty(\"text\");",
									"  pm.expect(responseJson).to.haveOwnProperty(\"priority\");",
									"});",
									"",
									"pm.environment.set(\"note-id\", responseJson.id);",
									"pm.environment.set(\"note-title\", responseJson.title);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": {{note-id}},\n    \"title\": \"12 Angry Men\",\n    \"text\": \" The jury in a New York City murder trial is frustrated by a single member whose skeptical caution forces them to more carefully consider the evidence before jumping to a hasty verdict.\",\n    \"priority\": \"HIGH\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{host}}:{{port}}/api/notes/{{note-id}}",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"notes",
								"{{note-id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {",
									"    pm.response.to.have.status(204);",
									"});",
									"",
									"pm.environment.unset(\"note-id\");",
									"pm.environment.unset(\"note-title\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://{{host}}:{{port}}/api/notes/{{note-id}}",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"api",
								"notes",
								"{{note-id}}"
							]
						}
					},
					"response": []
				}
			],
			"auth": {
				"type": "bearer",
				"bearer": [
					{
						"key": "token",
						"value": "{{auth-token}}",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		}
	],
	"event": [
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "user-email",
			"value": "tempmailbox.tempmailbox@yandex.ru",
			"type": "default"
		},
		{
			"key": "user-password",
			"value": "P4$$w0rd",
			"type": "default"
		}
	]
}
